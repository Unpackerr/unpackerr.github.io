"use strict";(self.webpackChunkunpackerrdox=self.webpackChunkunpackerrdox||[]).push([[164],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1606:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"docker",title:"Docker",pagination_prev:"install/choosemethod",pagination_next:"install/configuration"},i=void 0,l={unversionedId:"install/docker",id:"install/docker",title:"Docker",description:"This project builds automatically in Docker Cloud and creates",source:"@site/docs/install/docker.md",sourceDirName:"install",slug:"/install/docker",permalink:"/docs/install/docker",draft:!1,tags:[],version:"current",frontMatter:{id:"docker",title:"Docker",pagination_prev:"install/choosemethod",pagination_next:"install/configuration"},sidebar:"someSidebar",previous:{title:"Choose Install Method",permalink:"/docs/install/choosemethod"},next:{title:"Application Configuration",permalink:"/docs/install/configuration"}},s={},p=[{value:"Docker Example",id:"docker-example",level:2},{value:"Docker Example with config file",id:"docker-example-with-config-file",level:2},{value:"unRAID",id:"unraid",level:2},{value:"More Dockers",id:"more-dockers",level:2},{value:"Permissions",id:"permissions",level:2},{value:"Hotio",id:"hotio",level:3},{value:"unRAID Users",id:"unraid-users",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This project builds automatically in ",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/golift/unpackerr"},"Docker Cloud")," and creates\n",(0,a.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/golift/unpackerr/tags"},"ready-to-use multi-architecture images")," images.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"latest")," tag is always a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Unpackerr/unpackerr/releases"},"tagged release on GitHub"),"."),(0,a.kt)("h2",{id:"docker-example"},"Docker Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'docker pull golift/unpackerr\ndocker run -d -v /mnt/HostDownloads:/downloads \\\n  -e "UN_SONARR_0_URL=http://localhost:8989" \\\n  -e "UN_SONARR_0_API_KEY=kjsdkasjdaksdj" golift/unpackerr\ndocker logs <container id from docker run>\n')),(0,a.kt)("admonition",{title:"Data Mount",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"The ",(0,a.kt)("inlineCode",{parentName:"p"},"/data")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"/downloads")," mount you use for starr apps should be set the same for unpackerr.\nUsing the same mount path keeps consistency and makes troubleshooting Unpackerr easier."),(0,a.kt)("p",{parentName:"admonition"},"This means that if you mount ",(0,a.kt)("inlineCode",{parentName:"p"},"/mnt/HostDownloads:/downloads")," on your starr apps you should\nalso mount ",(0,a.kt)("inlineCode",{parentName:"p"},"/mnt/HostDownloads:/downloads")," on your unpackerr container. If you mount\n",(0,a.kt)("inlineCode",{parentName:"p"},"/mnt/user/data:/data")," on your starr apps, mount the same path on Unpackerr.\n",(0,a.kt)("strong",{parentName:"p"},"Make sure Unpackerr can find the downloads in the same place that Sonarr and Radarr find them."))),(0,a.kt)("h2",{id:"docker-example-with-config-file"},"Docker Example with config file"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Copy the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Unpackerr/unpackerr/blob/main/examples/unpackerr.conf.example"},"example config file"),"\nfrom the repo."),(0,a.kt)("li",{parentName:"ul"},"Then grab the image from docker hub and run it using an overlay for the config file's directory."),(0,a.kt)("li",{parentName:"ul"},"The config file must be at ",(0,a.kt)("inlineCode",{parentName:"li"},"/config/unpackerr.conf"),"."),(0,a.kt)("li",{parentName:"ul"},"Recommend bind-mounting ",(0,a.kt)("inlineCode",{parentName:"li"},"/config")," as an app-data directory. Example Follows.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull golift/unpackerr\ndocker run -d -v /mnt/HostDownloads:/downloads -v /folder/with/config/file:/config golift/unpackerr\ndocker logs <container id from docker run>\n")),(0,a.kt)("h2",{id:"unraid"},"unRAID"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Unpackerr is available in the\n",(0,a.kt)("a",{parentName:"li",href:"https://github.com/selfhosters/unRAID-CA-templates/blob/main/templates/unpackerr.xml"},"Community Applications"),"\non unRAID. Install it from the ",(0,a.kt)("inlineCode",{parentName:"li"},"Apps")," page.")),(0,a.kt)("h2",{id:"more-dockers"},"More Dockers"),(0,a.kt)("p",null," If you want a container that has a bit more to it, you can try a third party option.\nThe container provided by golift is from scratch so it has nothing more than a binary\nand a config file (with our defaults)."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"https://github.com/hotio"},"@hotio")," maintains a\n",(0,a.kt)("a",{parentName:"strong",href:"https://hub.docker.com/r/hotio/unpackerr"},"Custom Docker Container"),"\nfor Unpackerr.")," (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/hotio/unpackerr"},"repo"),")")),(0,a.kt)("h2",{id:"permissions"},"Permissions"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"golift")," docker container runs as uid 0 (root) by default. This is probably not what you want.\nMake sure to set the correct uid and gid with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--user")," parameter. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# This commands runs golift/unpackerr with UID 1000 and GID 100.\ndocker run --user 1000:100 -d -v /mnt/data:/data -v /mnt/config:/config golift/unpackerr\n")),(0,a.kt)("h3",{id:"hotio"},"Hotio"),(0,a.kt)("p",null,"The primary difference between the golift and hotio containers is how you set the uid and gid.\nHotdio does not user the ",(0,a.kt)("inlineCode",{parentName:"p"},"--user")," parameter and instead sets the UID and GID with environment variables.\nPass the ",(0,a.kt)("inlineCode",{parentName:"p"},"PUID")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"PGID")," env variables when using hotio's container. Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"# This commands runs hotio/unpackerr with UID 1000 and GID 100.\ndocker run -e PUID=1000 -e PGID=100 -d -v /mnt/data:/data -v /mnt/config:/config hotio/unpackerr\n")),(0,a.kt)("h3",{id:"unraid-users"},"unRAID Users"),(0,a.kt)("p",null,"Set the UID and GID by adding ",(0,a.kt)("inlineCode",{parentName:"p"},"--user 1000:100")," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Extra Parameters"),"\nsection of the unraid template after enabling the ",(0,a.kt)("inlineCode",{parentName:"p"},"Advanced")," view."))}d.isMDXComponent=!0}}]);